include make.inc

TARGET 		 :=  libdiago.a

#### make start here

SUBDIR = matrix elpa SL common fortran_interface 


INCS = $(wildcard *.h $(foreach fd, $(SUBDIR), $(fd)/*.h))
SRCS = $(wildcard *.c $(foreach fd, $(SUBDIR), $(fd)/*.c))
FC_SRCS = $(wildcard *.F $(foreach fd, $(SUBDIR), $(fd)/*.F))

# C object files
OBJS = $(addprefix ./, $(SRCS:c=o)) 
# Fortran F90 files generated by C preprocessor
F90_SRCS = $(addprefix ./, $(FC_SRCS:F=f90)) 
# Fortran object files generated by fortran compiler
FC_OBJS = $(addprefix ./, $(FC_SRCS:F=o)) 
# Fortran module files
FC_MODS = $(addprefix ./, $(FC_SRCS:F=mod)) 


INC_DIRS += $(ELPA_INC)

PHONY := $(TARGET)
$(TARGET): $(OBJS) $(FC_OBJS) $(F90_SRCS) make.inc 
	$(AR) rcs ./$@ $(OBJS) $(FC_OBJS) 

%.o: %.c $(INCS)
	$(CC) $(CFLAGS) -c $< $(INC_DIRS) $(YAMBO_FLAGS) -o $@

%.o: %.f90 $(F90_SRCS) $(FC_SRCS)
	$(FC) -c $< $(INC_DIRS) $(YAMBO_FLAGS) -o $@


%.f90: %.F $(FC_SRCS) 
	cp $< $(addsuffix .c,$^)
	$(CPP) -E -P $(CFLAGS) $(YAMBO_FLAGS) $(addsuffix .c,$^) > $@
	rm $(addsuffix .c,$^)

PHONY += clean
clean:
	rm ./$(TARGET) $(OBJS) $(F90_SRCS) $(FC_OBJS) *.mod

PHONY += echoes
echoes:
	@echo "INC files: $(INCS)"
	@echo "SRC files: $(SRCS)"
	@echo "OBJ files: $(OBJS)"
	@echo "INC DIR: $(INC_DIRS)"


.PHONY = $(PHONY)
